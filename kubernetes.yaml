# apiVersion: apps/v1
# kind: Deployment
# metadata:
#   name: demoapi-deployment
# spec:
#   selector:
#     matchLabels:
#       app: demoapi-pod
#   replicas: 1
#   template:
#     metadata:
#       labels:
#         app: demoapi-pod
#     spec:
#       containers:
#         - name: demoapi-container
#           image: demoapi:latest
#           imagePullPolicy: IfNotPresent
#           resources:
#             requests:
#               memory: "64Mi"
#               cpu: "250m"
#             limits:
#               memory: "128Mi"
#               cpu: "500m"
#           ports:
#             - containerPort: 80
#               protocol: TCP
#           env:
#             - name: ASPNETCORE_URLS
#               value: http://+:80             
# --- 
# apiVersion: v1
# kind: Service
# metadata:
#     name: demoapi-service
# spec:
#     ports:
#     - port: 80
#       protocol: TCP
#       targetPort: 80
#     selector:
#         app: demoapi-pod
#     type: ClusterIP
# ---
# apiVersion: networking.k8s.io/v1
# kind: Ingress
# metadata:
#     name: demoapi-ingress
# spec:
#     rules:
#     - http:
#         paths:
#         - path: /demo
#           pathType: Prefix
#           backend:
#             service:
#               name: demoapi-service
#               port:
#                 number: 80
# ---                
# apiVersion: apps/v1
# kind: Deployment
# metadata:
#   name: demoapp-deployment
# spec:
#   selector:
#     matchLabels:
#       app: demoapp-pod
#   replicas: 1
#   template:
#     metadata:
#       labels:
#         app: demoapp-pod
#     spec:
#       containers:
#         - name: demoapp-container
#           image: demoapp:latest
#           imagePullPolicy: IfNotPresent
#           resources:
#             requests:
#               memory: "64Mi"
#               cpu: "250m"
#             limits:
#               memory: "128Mi"
#               cpu: "500m"
#           ports:
#             - containerPort: 80
#               protocol: TCP           
# --- 
# apiVersion: v1
# kind: Service
# metadata:
#     name: demoapp-service
# spec:
#     ports:
#     - port: 80
#       protocol: TCP
#       targetPort: 80
#     selector:
#         app: demoapp-pod
#     type: ClusterIP
# ---
# apiVersion: networking.k8s.io/v1
# kind: Ingress
# metadata:
#     name: demo-ingress
# spec:
#     rules:
#     - http:
#         paths:
#         - path: /
#           pathType: Prefix
#           backend:
#             service:
#               name: demoapp-service
#               port:
#                 number: 80        


apiVersion: apps/v1
kind: Deployment
metadata:
  name: demoapi-deployment
spec:
  selector:
    matchLabels:
      app: demoapi-pod
  replicas: 1
  template:
    metadata:
      labels:
        app: demoapi-pod
    spec:
      containers:
        - name: demoapi-container
          image: demoapi:latest
          imagePullPolicy: IfNotPresent
          resources:
            requests:
              memory: "64Mi"
              cpu: "250m"
            limits:
              memory: "128Mi"
              cpu: "500m"
          ports:
            - containerPort: 80
              protocol: TCP
          env:
            - name: ASPNETCORE_URLS
              value: http://+:80             
--- 
apiVersion: v1
kind: Service
metadata:
  name: demoapi-service
spec:
  type: NodePort
  ports:
  - port: 80
    nodePort: 30100
    protocol: TCP
  selector:
      app: demoapi-pod


--- 
apiVersion: apps/v1
kind: Deployment
metadata:
  name: demoapp-deployment
spec:
  selector:
    matchLabels:
      app: demoapp-pod
  replicas: 1
  template:
    metadata:
      labels:
        app: demoapp-pod
    spec:
      containers:
        - name: demoapp-container
          image: demoapp:latest
          imagePullPolicy: IfNotPresent
          resources:
            requests:
              memory: "64Mi"
              cpu: "250m"
            limits:
              memory: "128Mi"
              cpu: "500m"
          ports:
            - containerPort: 80
              protocol: TCP           
--- 
apiVersion: v1
kind: Service
metadata:
  name: demoapp-service
spec:
  type: NodePort
  ports:
  - port: 80
    nodePort: 30200
    protocol: TCP
  selector:
      app: demoapp-pod
